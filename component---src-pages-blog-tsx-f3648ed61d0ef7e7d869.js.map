{"version":3,"file":"component---src-pages-blog-tsx-f3648ed61d0ef7e7d869.js","mappings":"8LA6BMA,EAAgBC,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,mGAUbC,EAAaD,EAAAA,QAAAA,OAAAA,WAAH,2DAAGA,CAAH,wFASVE,EAAYF,EAAAA,QAAAA,GAAAA,WAAH,0DAAGA,CAAH,yKAGJ,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,QAW1BC,EAAkBN,EAAAA,QAAAA,EAAAA,WAAH,gEAAGA,CAAH,0HAEV,SAAAG,GAAK,OAAIA,EAAMC,MAAMG,eAU1BC,EAAWR,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,0IAURS,GAAWT,EAAAA,EAAAA,SAAOU,EAAAA,MAAV,oEAAGV,CAAH,kNACE,SAAAG,GAAK,OAAIA,EAAMC,MAAMO,WAKf,SAAAR,GAAK,OAAIA,EAAMC,MAAMO,WAQvB,SAAAR,GAAK,OAAIA,EAAMC,MAAMQ,UAInCC,EAAYb,EAAAA,QAAAA,GAAAA,WAAH,0DAAGA,CAAH,sJAGJ,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,QAU1BS,EAAWd,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,2KACH,SAAAG,GAAK,OAAIA,EAAMC,MAAMG,eAc1BQ,EAAcf,EAAAA,QAAAA,EAAAA,WAAH,4DAAGA,CAAH,8IACN,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,QAY1BW,EAAWhB,EAAAA,QAAAA,KAAAA,WAAH,yDAAGA,CAAH,mJAIH,SAAAG,GAAK,OAAIA,EAAMC,MAAMQ,SAK5BH,GACS,SAAAN,GAAK,OAAIA,EAAMC,MAAMa,eA6ElC,UAzEiB,SAAC,GAA6B,IACvCC,EADsC,EAA1BC,KACCC,OAAOC,MAE1B,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEC,MAAM,OACNC,YAAY,sEACZC,SAAS,UAEX,gBAACzB,EAAD,KACE,gBAACE,EAAD,KACE,gBAACC,EAAD,aACA,gBAACI,EAAD,6EAIF,gBAACE,EAAD,KACGU,EAAMO,KAAI,SAAAC,GAAI,OACb,gBAACjB,EAAD,CAAUkB,IAAKD,EAAKE,GAAIC,GAAIH,EAAKI,OAAOC,MACtC,gBAAClB,EAAD,KAAYa,EAAKM,YAAYV,OAC7B,gBAACR,EAAD,KACE,4BAAOY,EAAKM,YAAYC,QACxB,4BACG,IAAIC,KAAKR,EAAKM,YAAYG,MAAMC,sBAElCV,EAAKM,YAAYK,MAAQX,EAAKM,YAAYK,KAAKC,OAAS,GACvD,4BACGZ,EAAKM,YAAYK,KAAKZ,KAAI,SAACc,EAAKC,EAAOC,GAAb,OACzB,gBAAC,WAAD,CAAgBd,IAAKY,GAClBA,EACAC,EAAQC,EAAMH,OAAS,GAAK,WAMvC,gBAACvB,EAAD,KACGW,EAAKM,YAAYT,aAAeG,EAAKgB,SAExC,gBAAC1B,EAAD","sources":["webpack://gatsby-starter-default/./src/pages/blog.tsx"],"sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport styled from \"styled-components\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\ninterface Post {\n  id: string;\n  excerpt: string;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    title: string;\n    date: string;\n    author: string;\n    description: string;\n    tags?: string[];\n  };\n}\n\ninterface BlogPageProps {\n  data: {\n    allMdx: {\n      nodes: Post[];\n    };\n  };\n}\n\nconst BlogContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem 1rem;\n\n  @media (min-width: 768px) {\n    padding: 4rem 2rem;\n  }\n`;\n\nconst BlogHeader = styled.header`\n  margin-bottom: 4rem;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    margin-bottom: 6rem;\n  }\n`;\n\nconst BlogTitle = styled.h1`\n  font-size: 2.5rem;\n  margin-bottom: 1rem;\n  color: ${props => props.theme.text};\n  font-weight: 800;\n  letter-spacing: -0.03em;\n  line-height: 1.2;\n\n  @media (min-width: 768px) {\n    font-size: 4rem;\n    margin-bottom: 1.5rem;\n  }\n`;\n\nconst BlogDescription = styled.p`\n  font-size: 1.2rem;\n  color: ${props => props.theme.neutralDark};\n  max-width: 600px;\n  margin: 0 auto;\n  line-height: 1.6;\n\n  @media (min-width: 768px) {\n    font-size: 1.4rem;\n  }\n`;\n\nconst PostList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 2rem;\n\n  @media (min-width: 640px) {\n    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n  }\n`;\n\nconst PostCard = styled(Link)`\n  background: ${props => props.theme.neutral};\n  border-radius: 12px;\n  padding: 1.5rem;\n  text-decoration: none;\n  display: block;\n  border: 1px solid ${props => props.theme.neutral};\n  transition: border-color 0.2s ease;\n\n  @media (min-width: 768px) {\n    padding: 2rem;\n  }\n\n  &:hover {\n    border-color: ${props => props.theme.accent};\n  }\n`;\n\nconst PostTitle = styled.h2`\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n  color: ${props => props.theme.text};\n  font-weight: 700;\n  line-height: 1.3;\n  letter-spacing: -0.02em;\n\n  @media (min-width: 768px) {\n    font-size: 1.8rem;\n  }\n`;\n\nconst PostMeta = styled.div`\n  color: ${props => props.theme.neutralDark};\n  font-size: 0.9rem;\n  margin-bottom: 1rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n\n  @media (min-width: 640px) {\n    flex-direction: row;\n    align-items: center;\n    gap: 1rem;\n  }\n`;\n\nconst PostExcerpt = styled.p`\n  color: ${props => props.theme.text};\n  line-height: 1.7;\n  margin-bottom: 1.5rem;\n  font-size: 1rem;\n  opacity: 0.9;\n\n  @media (min-width: 768px) {\n    font-size: 1.1rem;\n    margin-bottom: 2rem;\n  }\n`;\n\nconst ReadMore = styled.span`\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: ${props => props.theme.accent};\n  font-weight: 600;\n  font-size: 1rem;\n  transition: color 0.2s ease;\n\n  ${PostCard}:hover & {\n    color: ${props => props.theme.accentLight};\n  }\n`;\n\nconst BlogPage = ({ data }: BlogPageProps) => {\n  const posts = data.allMdx.nodes;\n\n  return (\n    <Layout>\n      <SEO\n        title=\"Blog\"\n        description=\"Thoughts, ideas, and insights about web development and technology.\"\n        pathname=\"/blog\"\n      />\n      <BlogContainer>\n        <BlogHeader>\n          <BlogTitle>Blog</BlogTitle>\n          <BlogDescription>\n            Thoughts, ideas, and insights about web development and technology.\n          </BlogDescription>\n        </BlogHeader>\n        <PostList>\n          {posts.map(post => (\n            <PostCard key={post.id} to={post.fields.slug}>\n              <PostTitle>{post.frontmatter.title}</PostTitle>\n              <PostMeta>\n                <span>{post.frontmatter.author}</span>\n                <span>\n                  {new Date(post.frontmatter.date).toLocaleDateString()}\n                </span>\n                {post.frontmatter.tags && post.frontmatter.tags.length > 0 && (\n                  <span>\n                    {post.frontmatter.tags.map((tag, index, array) => (\n                      <React.Fragment key={tag}>\n                        {tag}\n                        {index < array.length - 1 && \", \"}\n                      </React.Fragment>\n                    ))}\n                  </span>\n                )}\n              </PostMeta>\n              <PostExcerpt>\n                {post.frontmatter.description || post.excerpt}\n              </PostExcerpt>\n              <ReadMore>Read more â†’</ReadMore>\n            </PostCard>\n          ))}\n        </PostList>\n      </BlogContainer>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { slug: { regex: \"/^/blog/\" } } }\n    ) {\n      nodes {\n        id\n        excerpt(pruneLength: 160)\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          date\n          author\n          description\n          tags\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogPage;\n"],"names":["BlogContainer","styled","BlogHeader","BlogTitle","props","theme","text","BlogDescription","neutralDark","PostList","PostCard","Link","neutral","accent","PostTitle","PostMeta","PostExcerpt","ReadMore","accentLight","posts","data","allMdx","nodes","title","description","pathname","map","post","key","id","to","fields","slug","frontmatter","author","Date","date","toLocaleDateString","tags","length","tag","index","array","excerpt"],"sourceRoot":""}