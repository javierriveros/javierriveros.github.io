{"version":3,"file":"component---src-pages-projects-tsx-a0440d74ad5c4681c96d.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/education-card.tsx","webpack://gatsby-starter-default/./src/components/project-card.tsx","webpack://gatsby-starter-default/./src/components/projects.tsx","webpack://gatsby-starter-default/./src/pages/projects.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Item, Node } from \"../types\";\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// Styles\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nconst CardStyles = styled.article``;\n\nconst NodeTitle = styled.p`\n  font-size: 1.3rem;\n  margin-bottom: 0;\n  font-weight: 600;\n`;\n\nconst NodeDescription = styled.p``;\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// Types\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\ntype EducationCardProps = {\n  node: Node;\n};\n\ntype EducationItemProps = {\n  item: Item;\n};\n\nexport const EducationCard: React.FunctionComponent<EducationCardProps> = ({\n  node,\n}: EducationCardProps) => {\n  return (\n    <CardStyles>\n      <NodeTitle>{node.title}</NodeTitle>\n\n      <NodeDescription>{node.description}</NodeDescription>\n\n      <section>\n        {node.items.map((item: Item) => (\n          <EducationItem key={item.id} item={item} />\n        ))}\n      </section>\n    </CardStyles>\n  );\n};\n\nconst EducationItemStyles = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: 1rem 0;\n`;\n\nconst ItemTitle = styled.h4`\n  display: inline-block;\n  margin: 0 0 0.5rem;\n`;\n\nexport const Check = styled.div`\n  display: flex;\n  color: #17bdca;\n  /* width: 20px; */\n  padding-right: 0.5rem;\n  height: 100%;\n\n  svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledLink = styled.a`\n  color: #ffaf28;\n  text-decoration: none;\n`;\n\nconst EducationItem: React.FunctionComponent<EducationItemProps> = ({\n  item,\n}: EducationItemProps) => {\n  return (\n    <EducationItemStyles>\n      <Check>\n        <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path\n            fillRule=\"evenodd\"\n            d=\"M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </Check>\n      <Content>\n        <ItemTitle>{item.name}</ItemTitle>\n\n        {item.degree && <span>{item.degree}</span>}\n        {item.url && (\n          <StyledLink\n            href={item.url}\n            target=\"_blank\"\n            rel=\"noreferrer nooopener\"\n          >\n            View more\n          </StyledLink>\n        )}\n      </Content>\n    </EducationItemStyles>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Node } from \"./projects\";\nimport { Check } from \"./education-card\";\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// Styles\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nconst ProjectStyles = styled.article`\n  background-color: #424657;\n  padding: 1.5rem;\n  border-radius: 0.25em;\n  margin-top: 1rem;\n`;\n\nconst ProjectTitle = styled.h4`\n  font-size: 1.25rem;\n  margin: 0;\n`;\n\nconst ProjectDate = styled.span`\n  color: #c8c8cc;\n  font-size: 0.85rem;\n`;\n\nconst ProjectDescription = styled.p`\n  color: #ddddde;\n`;\n\nconst ProjectClient = styled.span`\n  color: #ffc25b;\n  font-size: 0.85rem;\n`;\n\nconst ProjectStack = styled.span`\n  color: #c8c8cc;\n  font-size: 0.85rem;\n`;\n\nconst ProjectGoals = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 1rem 0 0 0;\n  li {\n    display: flex;\n    align-items: start;\n    margin: 0.25rem 0 0 0;\n  }\n`;\n\nconst Dot = styled.span`\n  color: #c8c8cc;\n  margin: 0 0.5rem;\n`;\n\nconst ProjectCard = ({ node }: Node) => {\n  return (\n    <ProjectStyles>\n      <ProjectTitle>{node.name}</ProjectTitle>\n      <ProjectDate>{node.date}</ProjectDate>\n      <ProjectDescription>{node.description}</ProjectDescription>\n      <ProjectClient>{node.client}</ProjectClient>\n      <Dot>â€¢</Dot>\n      <ProjectStack>{node.stack}</ProjectStack>\n      <ProjectGoals>\n        {node.goals.map((goal: string, index: number) => (\n          <li key={index}>\n            <Check>\n              <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n            </Check>\n            {goal}\n          </li>\n        ))}\n      </ProjectGoals>\n    </ProjectStyles>\n  );\n};\n\nexport default ProjectCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport ProjectCard from \"./project-card\";\nimport { Container, Section, SectionProps, Title } from \"./styles\";\n\nconst ProjectsStyles = styled(Section)<SectionProps>`\n  //background-color: wheat;\n`;\n\nexport interface Node {\n  node: {\n    id: string;\n    name: string;\n    description: string;\n    client: string;\n    stack: string;\n    date: string;\n    goals: string[];\n  };\n}\n\nexport default function Projects() {\n  const data = useStaticQuery(graphql`\n    {\n      allProjectsJson(sort: { fields: date, order: DESC }) {\n        edges {\n          node {\n            id\n            name\n            description\n            stack\n            client\n            goals\n            date\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <ProjectsStyles>\n      <Container>\n        <Title>Some of the projects I&apos;ve worked on</Title>\n        {data.allProjectsJson.edges.map(({ node }: Node) => (\n          <ProjectCard node={node} key={node.id} />\n        ))}\n      </Container>\n    </ProjectsStyles>\n  );\n}\n","import * as React from \"react\";\n\nimport SEO from \"../components/seo\";\nimport Layout from \"../components/layout\";\nimport Projects from \"../components/projects\";\n\nexport default function ProjectsPage() {\n  return (\n    <Layout>\n      <SEO\n        title=\"Home\"\n        meta={[\n          {\n            name: \"keywords\",\n            content: \"portfolio, gatsby, react, javascript\",\n          },\n        ]}\n      />\n      <Projects />\n    </Layout>\n  );\n}\n"],"names":["CardStyles","styled","NodeTitle","NodeDescription","EducationCard","node","title","description","items","map","item","EducationItem","key","id","EducationItemStyles","ItemTitle","Check","Content","StyledLink","fill","viewBox","fillRule","d","clipRule","name","degree","url","href","target","rel","ProjectStyles","ProjectTitle","ProjectDate","ProjectDescription","ProjectClient","ProjectStack","ProjectGoals","Dot","date","client","stack","goals","goal","index","ProjectsStyles","Section","Projects","data","useStaticQuery","allProjectsJson","edges","ProjectsPage","meta","content"],"sourceRoot":""}